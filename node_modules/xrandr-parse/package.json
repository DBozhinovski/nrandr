{
  "name": "xrandr-parse",
  "version": "0.1.1",
  "description": "parse the output of the `xrandr` command",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/substack/xrandr-parse.git"
  },
  "homepage": "https://github.com/substack/xrandr-parse",
  "keywords": [
    "xrandr",
    "parse",
    "linux",
    "x11"
  ],
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "license": "MIT",
  "readme": "# xrandr-parse\n\nparse the output of the `xrandr` command\n\n# example\n\n``` js\nvar parse = require('xrandr-parse');\nvar exec = require('child_process').exec;\n\nexec('xrandr', function (err, stdout) {\n    var query = parse(stdout);\n    console.log(JSON.stringify(query, null, 2));\n});\n```\n\nthe `xrandr` command produced this output:\n\n```\nScreen 0: minimum 320 x 200, current 1366 x 768, maximum 3360 x 2048\nLVDS connected 1366x768+0+0 (normal left inverted right x axis y axis) 256mm x 144mm\n   1366x768       60.0*+   50.0  \n   1360x768       60.0     50.0  \n   1280x768       60.0     50.0  \n   1280x720       60.0     50.0  \n   1024x768       60.0     50.0  \n   1024x600       60.0     50.0  \n   800x600        60.0     50.0  \n   800x480        60.0     50.0  \n   640x480        60.0     50.0  \nDFP1 disconnected (normal left inverted right x axis y axis)\nCRT1 disconnected (normal left inverted right x axis y axis)\n```\n\nand the parsed query was:\n\n```\n{\n  \"LVDS\": {\n    \"connected\": true,\n    \"width\": 1366,\n    \"height\": 768,\n    \"modes\": [\n      {\n        \"width\": \"1366\",\n        \"height\": \"768\",\n        \"rate\": 60\n      },\n      {\n        \"width\": \"1360\",\n        \"height\": \"768\",\n        \"rate\": 60\n      },\n      {\n        \"width\": \"1280\",\n        \"height\": \"768\",\n        \"rate\": 60\n      },\n      {\n        \"width\": \"1280\",\n        \"height\": \"720\",\n        \"rate\": 60\n      },\n      {\n        \"width\": \"1024\",\n        \"height\": \"768\",\n        \"rate\": 60\n      },\n      {\n        \"width\": \"1024\",\n        \"height\": \"600\",\n        \"rate\": 60\n      },\n      {\n        \"width\": \"800\",\n        \"height\": \"600\",\n        \"rate\": 60\n      },\n      {\n        \"width\": \"800\",\n        \"height\": \"480\",\n        \"rate\": 60\n      },\n      {\n        \"width\": \"640\",\n        \"height\": \"480\",\n        \"rate\": 60\n      }\n    ],\n    \"index\": 0,\n    \"native\": {\n      \"width\": \"1366\",\n      \"height\": \"768\",\n      \"rate\": 60\n    },\n    \"current\": {\n      \"width\": \"1366\",\n      \"height\": \"768\",\n      \"rate\": 60\n    }\n  },\n  \"DFP1\": {\n    \"connected\": false,\n    \"modes\": [],\n    \"index\": 1\n  },\n  \"CRT1\": {\n    \"connected\": false,\n    \"modes\": [],\n    \"index\": 2\n  }\n}\n```\n\n# methods\n\n``` js\nvar parse = require('xrandr-parse')\n```\n\n## parse(xrandrOutput)\n\nReturn the parsed output from a string full of the output from `xrandr`,\n`xrandrOutput`.\n\nThe return object is keyed by each output name.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install xrandr-parse\n```\n\n# license\n\nMIT\n",
  "readmeFilename": "readme.markdown",
  "bugs": {
    "url": "https://github.com/substack/xrandr-parse/issues"
  },
  "_id": "xrandr-parse@0.1.1",
  "dist": {
    "shasum": "91e2b54260b684bfd3e6127d14b9ab1c604f9f6b"
  },
  "_from": "xrandr-parse@*",
  "_resolved": "https://registry.npmjs.org/xrandr-parse/-/xrandr-parse-0.1.1.tgz"
}
